//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g 2012-06-25 09:47:22

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class JavaScriptRegExpLexer : Antlr.Runtime.Lexer
{
	public const int EOF=-1;
	public const int T__14=14;
	public const int T__15=15;
	public const int T__16=16;
	public const int T__17=17;
	public const int T__18=18;
	public const int T__19=19;
	public const int T__20=20;
	public const int T__21=21;
	public const int T__22=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int T__43=43;
	public const int ControlEscape=4;
	public const int ControlLetter=5;
	public const int DecimalDigit=6;
	public const int DecimalDigits=7;
	public const int DecimalIntegerLiteral=8;
	public const int HexDigit=9;
	public const int HexEscapeSequence=10;
	public const int IdentityEscape=11;
	public const int NonZeroDigit=12;
	public const int UnicodeEscapeSequence=13;

    // delegates
    // delegators

	public JavaScriptRegExpLexer()
	{
		OnCreated();
	}

	public JavaScriptRegExpLexer(ICharStream input )
		: this(input, new RecognizerSharedState())
	{
	}

	public JavaScriptRegExpLexer(ICharStream input, RecognizerSharedState state)
		: base(input, state)
	{

		OnCreated();
	}
	public override string GrammarFileName { get { return "C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	partial void EnterRule_T__14();
	partial void LeaveRule_T__14();

	// $ANTLR start "T__14"
	[GrammarRule("T__14")]
	private void mT__14()
	{
		EnterRule_T__14();
		EnterRule("T__14", 1);
		TraceIn("T__14", 1);
		try
		{
			int _type = T__14;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:7:7: ( '$' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:7:9: '$'
			{
			DebugLocation(7, 9);
			Match('$'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__14", 1);
			LeaveRule("T__14", 1);
			LeaveRule_T__14();
		}
	}
	// $ANTLR end "T__14"

	partial void EnterRule_T__15();
	partial void LeaveRule_T__15();

	// $ANTLR start "T__15"
	[GrammarRule("T__15")]
	private void mT__15()
	{
		EnterRule_T__15();
		EnterRule("T__15", 2);
		TraceIn("T__15", 2);
		try
		{
			int _type = T__15;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:8:7: ( '(' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:8:9: '('
			{
			DebugLocation(8, 9);
			Match('('); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__15", 2);
			LeaveRule("T__15", 2);
			LeaveRule_T__15();
		}
	}
	// $ANTLR end "T__15"

	partial void EnterRule_T__16();
	partial void LeaveRule_T__16();

	// $ANTLR start "T__16"
	[GrammarRule("T__16")]
	private void mT__16()
	{
		EnterRule_T__16();
		EnterRule("T__16", 3);
		TraceIn("T__16", 3);
		try
		{
			int _type = T__16;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:9:7: ( '(:?' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:9:9: '(:?'
			{
			DebugLocation(9, 9);
			Match("(:?"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__16", 3);
			LeaveRule("T__16", 3);
			LeaveRule_T__16();
		}
	}
	// $ANTLR end "T__16"

	partial void EnterRule_T__17();
	partial void LeaveRule_T__17();

	// $ANTLR start "T__17"
	[GrammarRule("T__17")]
	private void mT__17()
	{
		EnterRule_T__17();
		EnterRule("T__17", 4);
		TraceIn("T__17", 4);
		try
		{
			int _type = T__17;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:10:7: ( '(?!' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:10:9: '(?!'
			{
			DebugLocation(10, 9);
			Match("(?!"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__17", 4);
			LeaveRule("T__17", 4);
			LeaveRule_T__17();
		}
	}
	// $ANTLR end "T__17"

	partial void EnterRule_T__18();
	partial void LeaveRule_T__18();

	// $ANTLR start "T__18"
	[GrammarRule("T__18")]
	private void mT__18()
	{
		EnterRule_T__18();
		EnterRule("T__18", 5);
		TraceIn("T__18", 5);
		try
		{
			int _type = T__18;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:11:7: ( '(?=' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:11:9: '(?='
			{
			DebugLocation(11, 9);
			Match("(?="); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__18", 5);
			LeaveRule("T__18", 5);
			LeaveRule_T__18();
		}
	}
	// $ANTLR end "T__18"

	partial void EnterRule_T__19();
	partial void LeaveRule_T__19();

	// $ANTLR start "T__19"
	[GrammarRule("T__19")]
	private void mT__19()
	{
		EnterRule_T__19();
		EnterRule("T__19", 6);
		TraceIn("T__19", 6);
		try
		{
			int _type = T__19;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:12:7: ( ')' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:12:9: ')'
			{
			DebugLocation(12, 9);
			Match(')'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__19", 6);
			LeaveRule("T__19", 6);
			LeaveRule_T__19();
		}
	}
	// $ANTLR end "T__19"

	partial void EnterRule_T__20();
	partial void LeaveRule_T__20();

	// $ANTLR start "T__20"
	[GrammarRule("T__20")]
	private void mT__20()
	{
		EnterRule_T__20();
		EnterRule("T__20", 7);
		TraceIn("T__20", 7);
		try
		{
			int _type = T__20;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:13:7: ( '*' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:13:9: '*'
			{
			DebugLocation(13, 9);
			Match('*'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__20", 7);
			LeaveRule("T__20", 7);
			LeaveRule_T__20();
		}
	}
	// $ANTLR end "T__20"

	partial void EnterRule_T__21();
	partial void LeaveRule_T__21();

	// $ANTLR start "T__21"
	[GrammarRule("T__21")]
	private void mT__21()
	{
		EnterRule_T__21();
		EnterRule("T__21", 8);
		TraceIn("T__21", 8);
		try
		{
			int _type = T__21;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:14:7: ( '+' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:14:9: '+'
			{
			DebugLocation(14, 9);
			Match('+'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__21", 8);
			LeaveRule("T__21", 8);
			LeaveRule_T__21();
		}
	}
	// $ANTLR end "T__21"

	partial void EnterRule_T__22();
	partial void LeaveRule_T__22();

	// $ANTLR start "T__22"
	[GrammarRule("T__22")]
	private void mT__22()
	{
		EnterRule_T__22();
		EnterRule("T__22", 9);
		TraceIn("T__22", 9);
		try
		{
			int _type = T__22;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:15:7: ( ',' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:15:9: ','
			{
			DebugLocation(15, 9);
			Match(','); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__22", 9);
			LeaveRule("T__22", 9);
			LeaveRule_T__22();
		}
	}
	// $ANTLR end "T__22"

	partial void EnterRule_T__23();
	partial void LeaveRule_T__23();

	// $ANTLR start "T__23"
	[GrammarRule("T__23")]
	private void mT__23()
	{
		EnterRule_T__23();
		EnterRule("T__23", 10);
		TraceIn("T__23", 10);
		try
		{
			int _type = T__23;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:16:7: ( '-' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:16:9: '-'
			{
			DebugLocation(16, 9);
			Match('-'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__23", 10);
			LeaveRule("T__23", 10);
			LeaveRule_T__23();
		}
	}
	// $ANTLR end "T__23"

	partial void EnterRule_T__24();
	partial void LeaveRule_T__24();

	// $ANTLR start "T__24"
	[GrammarRule("T__24")]
	private void mT__24()
	{
		EnterRule_T__24();
		EnterRule("T__24", 11);
		TraceIn("T__24", 11);
		try
		{
			int _type = T__24;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:17:7: ( '.' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:17:9: '.'
			{
			DebugLocation(17, 9);
			Match('.'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__24", 11);
			LeaveRule("T__24", 11);
			LeaveRule_T__24();
		}
	}
	// $ANTLR end "T__24"

	partial void EnterRule_T__25();
	partial void LeaveRule_T__25();

	// $ANTLR start "T__25"
	[GrammarRule("T__25")]
	private void mT__25()
	{
		EnterRule_T__25();
		EnterRule("T__25", 12);
		TraceIn("T__25", 12);
		try
		{
			int _type = T__25;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:18:7: ( '?' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:18:9: '?'
			{
			DebugLocation(18, 9);
			Match('?'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__25", 12);
			LeaveRule("T__25", 12);
			LeaveRule_T__25();
		}
	}
	// $ANTLR end "T__25"

	partial void EnterRule_T__26();
	partial void LeaveRule_T__26();

	// $ANTLR start "T__26"
	[GrammarRule("T__26")]
	private void mT__26()
	{
		EnterRule_T__26();
		EnterRule("T__26", 13);
		TraceIn("T__26", 13);
		try
		{
			int _type = T__26;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:19:7: ( 'D' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:19:9: 'D'
			{
			DebugLocation(19, 9);
			Match('D'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__26", 13);
			LeaveRule("T__26", 13);
			LeaveRule_T__26();
		}
	}
	// $ANTLR end "T__26"

	partial void EnterRule_T__27();
	partial void LeaveRule_T__27();

	// $ANTLR start "T__27"
	[GrammarRule("T__27")]
	private void mT__27()
	{
		EnterRule_T__27();
		EnterRule("T__27", 14);
		TraceIn("T__27", 14);
		try
		{
			int _type = T__27;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:20:7: ( 'S' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:20:9: 'S'
			{
			DebugLocation(20, 9);
			Match('S'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__27", 14);
			LeaveRule("T__27", 14);
			LeaveRule_T__27();
		}
	}
	// $ANTLR end "T__27"

	partial void EnterRule_T__28();
	partial void LeaveRule_T__28();

	// $ANTLR start "T__28"
	[GrammarRule("T__28")]
	private void mT__28()
	{
		EnterRule_T__28();
		EnterRule("T__28", 15);
		TraceIn("T__28", 15);
		try
		{
			int _type = T__28;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:21:7: ( 'W' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:21:9: 'W'
			{
			DebugLocation(21, 9);
			Match('W'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__28", 15);
			LeaveRule("T__28", 15);
			LeaveRule_T__28();
		}
	}
	// $ANTLR end "T__28"

	partial void EnterRule_T__29();
	partial void LeaveRule_T__29();

	// $ANTLR start "T__29"
	[GrammarRule("T__29")]
	private void mT__29()
	{
		EnterRule_T__29();
		EnterRule("T__29", 16);
		TraceIn("T__29", 16);
		try
		{
			int _type = T__29;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:22:7: ( '[' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:22:9: '['
			{
			DebugLocation(22, 9);
			Match('['); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__29", 16);
			LeaveRule("T__29", 16);
			LeaveRule_T__29();
		}
	}
	// $ANTLR end "T__29"

	partial void EnterRule_T__30();
	partial void LeaveRule_T__30();

	// $ANTLR start "T__30"
	[GrammarRule("T__30")]
	private void mT__30()
	{
		EnterRule_T__30();
		EnterRule("T__30", 17);
		TraceIn("T__30", 17);
		try
		{
			int _type = T__30;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:23:7: ( '[^' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:23:9: '[^'
			{
			DebugLocation(23, 9);
			Match("[^"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__30", 17);
			LeaveRule("T__30", 17);
			LeaveRule_T__30();
		}
	}
	// $ANTLR end "T__30"

	partial void EnterRule_T__31();
	partial void LeaveRule_T__31();

	// $ANTLR start "T__31"
	[GrammarRule("T__31")]
	private void mT__31()
	{
		EnterRule_T__31();
		EnterRule("T__31", 18);
		TraceIn("T__31", 18);
		try
		{
			int _type = T__31;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:24:7: ( '\\\\' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:24:9: '\\\\'
			{
			DebugLocation(24, 9);
			Match('\\'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__31", 18);
			LeaveRule("T__31", 18);
			LeaveRule_T__31();
		}
	}
	// $ANTLR end "T__31"

	partial void EnterRule_T__32();
	partial void LeaveRule_T__32();

	// $ANTLR start "T__32"
	[GrammarRule("T__32")]
	private void mT__32()
	{
		EnterRule_T__32();
		EnterRule("T__32", 19);
		TraceIn("T__32", 19);
		try
		{
			int _type = T__32;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:25:7: ( '\\\\B' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:25:9: '\\\\B'
			{
			DebugLocation(25, 9);
			Match("\\B"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__32", 19);
			LeaveRule("T__32", 19);
			LeaveRule_T__32();
		}
	}
	// $ANTLR end "T__32"

	partial void EnterRule_T__33();
	partial void LeaveRule_T__33();

	// $ANTLR start "T__33"
	[GrammarRule("T__33")]
	private void mT__33()
	{
		EnterRule_T__33();
		EnterRule("T__33", 20);
		TraceIn("T__33", 20);
		try
		{
			int _type = T__33;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:26:7: ( '\\\\b' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:26:9: '\\\\b'
			{
			DebugLocation(26, 9);
			Match("\\b"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__33", 20);
			LeaveRule("T__33", 20);
			LeaveRule_T__33();
		}
	}
	// $ANTLR end "T__33"

	partial void EnterRule_T__34();
	partial void LeaveRule_T__34();

	// $ANTLR start "T__34"
	[GrammarRule("T__34")]
	private void mT__34()
	{
		EnterRule_T__34();
		EnterRule("T__34", 21);
		TraceIn("T__34", 21);
		try
		{
			int _type = T__34;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:27:7: ( ']' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:27:9: ']'
			{
			DebugLocation(27, 9);
			Match(']'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__34", 21);
			LeaveRule("T__34", 21);
			LeaveRule_T__34();
		}
	}
	// $ANTLR end "T__34"

	partial void EnterRule_T__35();
	partial void LeaveRule_T__35();

	// $ANTLR start "T__35"
	[GrammarRule("T__35")]
	private void mT__35()
	{
		EnterRule_T__35();
		EnterRule("T__35", 22);
		TraceIn("T__35", 22);
		try
		{
			int _type = T__35;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:28:7: ( '^' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:28:9: '^'
			{
			DebugLocation(28, 9);
			Match('^'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__35", 22);
			LeaveRule("T__35", 22);
			LeaveRule_T__35();
		}
	}
	// $ANTLR end "T__35"

	partial void EnterRule_T__36();
	partial void LeaveRule_T__36();

	// $ANTLR start "T__36"
	[GrammarRule("T__36")]
	private void mT__36()
	{
		EnterRule_T__36();
		EnterRule("T__36", 23);
		TraceIn("T__36", 23);
		try
		{
			int _type = T__36;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:29:7: ( 'b' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:29:9: 'b'
			{
			DebugLocation(29, 9);
			Match('b'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__36", 23);
			LeaveRule("T__36", 23);
			LeaveRule_T__36();
		}
	}
	// $ANTLR end "T__36"

	partial void EnterRule_T__37();
	partial void LeaveRule_T__37();

	// $ANTLR start "T__37"
	[GrammarRule("T__37")]
	private void mT__37()
	{
		EnterRule_T__37();
		EnterRule("T__37", 24);
		TraceIn("T__37", 24);
		try
		{
			int _type = T__37;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:30:7: ( 'c' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:30:9: 'c'
			{
			DebugLocation(30, 9);
			Match('c'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__37", 24);
			LeaveRule("T__37", 24);
			LeaveRule_T__37();
		}
	}
	// $ANTLR end "T__37"

	partial void EnterRule_T__38();
	partial void LeaveRule_T__38();

	// $ANTLR start "T__38"
	[GrammarRule("T__38")]
	private void mT__38()
	{
		EnterRule_T__38();
		EnterRule("T__38", 25);
		TraceIn("T__38", 25);
		try
		{
			int _type = T__38;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:31:7: ( 'd' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:31:9: 'd'
			{
			DebugLocation(31, 9);
			Match('d'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__38", 25);
			LeaveRule("T__38", 25);
			LeaveRule_T__38();
		}
	}
	// $ANTLR end "T__38"

	partial void EnterRule_T__39();
	partial void LeaveRule_T__39();

	// $ANTLR start "T__39"
	[GrammarRule("T__39")]
	private void mT__39()
	{
		EnterRule_T__39();
		EnterRule("T__39", 26);
		TraceIn("T__39", 26);
		try
		{
			int _type = T__39;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:32:7: ( 's' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:32:9: 's'
			{
			DebugLocation(32, 9);
			Match('s'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__39", 26);
			LeaveRule("T__39", 26);
			LeaveRule_T__39();
		}
	}
	// $ANTLR end "T__39"

	partial void EnterRule_T__40();
	partial void LeaveRule_T__40();

	// $ANTLR start "T__40"
	[GrammarRule("T__40")]
	private void mT__40()
	{
		EnterRule_T__40();
		EnterRule("T__40", 27);
		TraceIn("T__40", 27);
		try
		{
			int _type = T__40;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:33:7: ( 'w' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:33:9: 'w'
			{
			DebugLocation(33, 9);
			Match('w'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__40", 27);
			LeaveRule("T__40", 27);
			LeaveRule_T__40();
		}
	}
	// $ANTLR end "T__40"

	partial void EnterRule_T__41();
	partial void LeaveRule_T__41();

	// $ANTLR start "T__41"
	[GrammarRule("T__41")]
	private void mT__41()
	{
		EnterRule_T__41();
		EnterRule("T__41", 28);
		TraceIn("T__41", 28);
		try
		{
			int _type = T__41;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:34:7: ( '{' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:34:9: '{'
			{
			DebugLocation(34, 9);
			Match('{'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__41", 28);
			LeaveRule("T__41", 28);
			LeaveRule_T__41();
		}
	}
	// $ANTLR end "T__41"

	partial void EnterRule_T__42();
	partial void LeaveRule_T__42();

	// $ANTLR start "T__42"
	[GrammarRule("T__42")]
	private void mT__42()
	{
		EnterRule_T__42();
		EnterRule("T__42", 29);
		TraceIn("T__42", 29);
		try
		{
			int _type = T__42;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:35:7: ( '|' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:35:9: '|'
			{
			DebugLocation(35, 9);
			Match('|'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__42", 29);
			LeaveRule("T__42", 29);
			LeaveRule_T__42();
		}
	}
	// $ANTLR end "T__42"

	partial void EnterRule_T__43();
	partial void LeaveRule_T__43();

	// $ANTLR start "T__43"
	[GrammarRule("T__43")]
	private void mT__43()
	{
		EnterRule_T__43();
		EnterRule("T__43", 30);
		TraceIn("T__43", 30);
		try
		{
			int _type = T__43;
			int _channel = DefaultTokenChannel;
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:36:7: ( '}' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:36:9: '}'
			{
			DebugLocation(36, 9);
			Match('}'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("T__43", 30);
			LeaveRule("T__43", 30);
			LeaveRule_T__43();
		}
	}
	// $ANTLR end "T__43"

	partial void EnterRule_ControlEscape();
	partial void LeaveRule_ControlEscape();

	// $ANTLR start "ControlEscape"
	[GrammarRule("ControlEscape")]
	private void mControlEscape()
	{
		EnterRule_ControlEscape();
		EnterRule("ControlEscape", 31);
		TraceIn("ControlEscape", 31);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:74:2: ( 'f' | 'n' | 'r' | 't' | 'v' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(74, 2);
			if (input.LA(1)=='f'||input.LA(1)=='n'||input.LA(1)=='r'||input.LA(1)=='t'||input.LA(1)=='v')
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("ControlEscape", 31);
			LeaveRule("ControlEscape", 31);
			LeaveRule_ControlEscape();
		}
	}
	// $ANTLR end "ControlEscape"

	partial void EnterRule_ControlLetter();
	partial void LeaveRule_ControlLetter();

	// $ANTLR start "ControlLetter"
	[GrammarRule("ControlLetter")]
	private void mControlLetter()
	{
		EnterRule_ControlLetter();
		EnterRule("ControlLetter", 32);
		TraceIn("ControlLetter", 32);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:82:2: ( ( 'a' .. 'z' | 'A' .. 'Z' ) )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(82, 2);
			if ((input.LA(1)>='A' && input.LA(1)<='Z')||(input.LA(1)>='a' && input.LA(1)<='z'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("ControlLetter", 32);
			LeaveRule("ControlLetter", 32);
			LeaveRule_ControlLetter();
		}
	}
	// $ANTLR end "ControlLetter"

	partial void EnterRule_HexEscapeSequence();
	partial void LeaveRule_HexEscapeSequence();

	// $ANTLR start "HexEscapeSequence"
	[GrammarRule("HexEscapeSequence")]
	private void mHexEscapeSequence()
	{
		EnterRule_HexEscapeSequence();
		EnterRule("HexEscapeSequence", 33);
		TraceIn("HexEscapeSequence", 33);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:86:2: ( 'x' HexDigit HexDigit )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:86:4: 'x' HexDigit HexDigit
			{
			DebugLocation(86, 4);
			Match('x'); 
			DebugLocation(86, 8);
			mHexDigit(); 
			DebugLocation(86, 17);
			mHexDigit(); 

			}

		}
		finally
		{
			TraceOut("HexEscapeSequence", 33);
			LeaveRule("HexEscapeSequence", 33);
			LeaveRule_HexEscapeSequence();
		}
	}
	// $ANTLR end "HexEscapeSequence"

	partial void EnterRule_UnicodeEscapeSequence();
	partial void LeaveRule_UnicodeEscapeSequence();

	// $ANTLR start "UnicodeEscapeSequence"
	[GrammarRule("UnicodeEscapeSequence")]
	private void mUnicodeEscapeSequence()
	{
		EnterRule_UnicodeEscapeSequence();
		EnterRule("UnicodeEscapeSequence", 34);
		TraceIn("UnicodeEscapeSequence", 34);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:90:2: ( 'u' HexDigit HexDigit HexDigit HexDigit )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:90:4: 'u' HexDigit HexDigit HexDigit HexDigit
			{
			DebugLocation(90, 4);
			Match('u'); 
			DebugLocation(90, 8);
			mHexDigit(); 
			DebugLocation(90, 17);
			mHexDigit(); 
			DebugLocation(90, 26);
			mHexDigit(); 
			DebugLocation(90, 35);
			mHexDigit(); 

			}

		}
		finally
		{
			TraceOut("UnicodeEscapeSequence", 34);
			LeaveRule("UnicodeEscapeSequence", 34);
			LeaveRule_UnicodeEscapeSequence();
		}
	}
	// $ANTLR end "UnicodeEscapeSequence"

	partial void EnterRule_HexDigit();
	partial void LeaveRule_HexDigit();

	// $ANTLR start "HexDigit"
	[GrammarRule("HexDigit")]
	private void mHexDigit()
	{
		EnterRule_HexDigit();
		EnterRule("HexDigit", 35);
		TraceIn("HexDigit", 35);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:94:2: ( ( '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' ) )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(94, 2);
			if ((input.LA(1)>='0' && input.LA(1)<='9')||(input.LA(1)>='A' && input.LA(1)<='F')||(input.LA(1)>='a' && input.LA(1)<='f'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("HexDigit", 35);
			LeaveRule("HexDigit", 35);
			LeaveRule_HexDigit();
		}
	}
	// $ANTLR end "HexDigit"

	partial void EnterRule_IdentityEscape();
	partial void LeaveRule_IdentityEscape();

	// $ANTLR start "IdentityEscape"
	[GrammarRule("IdentityEscape")]
	private void mIdentityEscape()
	{
		EnterRule_IdentityEscape();
		EnterRule("IdentityEscape", 36);
		TraceIn("IdentityEscape", 36);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:98:2: (~ ( 'b' | 'B' | '0' .. '9' | 'f' | 'n' | 'r' | 't' | 'v' | 'c' | 'x' | 'u' ) )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(98, 2);
			if ((input.LA(1)>='\u0000' && input.LA(1)<='/')||(input.LA(1)>=':' && input.LA(1)<='A')||(input.LA(1)>='C' && input.LA(1)<='a')||(input.LA(1)>='d' && input.LA(1)<='e')||(input.LA(1)>='g' && input.LA(1)<='m')||(input.LA(1)>='o' && input.LA(1)<='q')||input.LA(1)=='s'||input.LA(1)=='w'||(input.LA(1)>='y' && input.LA(1)<='\uFFFF'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("IdentityEscape", 36);
			LeaveRule("IdentityEscape", 36);
			LeaveRule_IdentityEscape();
		}
	}
	// $ANTLR end "IdentityEscape"

	partial void EnterRule_DecimalIntegerLiteral();
	partial void LeaveRule_DecimalIntegerLiteral();

	// $ANTLR start "DecimalIntegerLiteral"
	[GrammarRule("DecimalIntegerLiteral")]
	private void mDecimalIntegerLiteral()
	{
		EnterRule_DecimalIntegerLiteral();
		EnterRule("DecimalIntegerLiteral", 37);
		TraceIn("DecimalIntegerLiteral", 37);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:106:2: ( '0' | NonZeroDigit ( DecimalDigits )? )
			int alt2=2;
			try { DebugEnterDecision(2, false);
			int LA2_0 = input.LA(1);

			if ((LA2_0=='0'))
			{
				alt2 = 1;
			}
			else if (((LA2_0>='1' && LA2_0<='9')))
			{
				alt2 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 2, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:106:4: '0'
				{
				DebugLocation(106, 4);
				Match('0'); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:107:4: NonZeroDigit ( DecimalDigits )?
				{
				DebugLocation(107, 4);
				mNonZeroDigit(); 
				DebugLocation(107, 17);
				// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:107:17: ( DecimalDigits )?
				int alt1=2;
				try { DebugEnterSubRule(1);
				try { DebugEnterDecision(1, false);
				int LA1_0 = input.LA(1);

				if (((LA1_0>='0' && LA1_0<='9')))
				{
					alt1 = 1;
				}
				} finally { DebugExitDecision(1); }
				switch (alt1)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:107:17: DecimalDigits
					{
					DebugLocation(107, 17);
					mDecimalDigits(); 

					}
					break;

				}
				} finally { DebugExitSubRule(1); }


				}
				break;

			}
		}
		finally
		{
			TraceOut("DecimalIntegerLiteral", 37);
			LeaveRule("DecimalIntegerLiteral", 37);
			LeaveRule_DecimalIntegerLiteral();
		}
	}
	// $ANTLR end "DecimalIntegerLiteral"

	partial void EnterRule_NonZeroDigit();
	partial void LeaveRule_NonZeroDigit();

	// $ANTLR start "NonZeroDigit"
	[GrammarRule("NonZeroDigit")]
	private void mNonZeroDigit()
	{
		EnterRule_NonZeroDigit();
		EnterRule("NonZeroDigit", 38);
		TraceIn("NonZeroDigit", 38);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:111:2: ( '1' .. '9' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(111, 2);
			if ((input.LA(1)>='1' && input.LA(1)<='9'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("NonZeroDigit", 38);
			LeaveRule("NonZeroDigit", 38);
			LeaveRule_NonZeroDigit();
		}
	}
	// $ANTLR end "NonZeroDigit"

	partial void EnterRule_DecimalDigits();
	partial void LeaveRule_DecimalDigits();

	// $ANTLR start "DecimalDigits"
	[GrammarRule("DecimalDigits")]
	private void mDecimalDigits()
	{
		EnterRule_DecimalDigits();
		EnterRule("DecimalDigits", 39);
		TraceIn("DecimalDigits", 39);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:115:2: ( ( DecimalDigit )+ )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:115:4: ( DecimalDigit )+
			{
			DebugLocation(115, 4);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:115:4: ( DecimalDigit )+
			int cnt3=0;
			try { DebugEnterSubRule(3);
			while (true)
			{
				int alt3=2;
				try { DebugEnterDecision(3, false);
				int LA3_0 = input.LA(1);

				if (((LA3_0>='0' && LA3_0<='9')))
				{
					alt3 = 1;
				}


				} finally { DebugExitDecision(3); }
				switch (alt3)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
					{
					DebugLocation(115, 4);
					input.Consume();


					}
					break;

				default:
					if (cnt3 >= 1)
						goto loop3;

					EarlyExitException eee3 = new EarlyExitException( 3, input );
					DebugRecognitionException(eee3);
					throw eee3;
				}
				cnt3++;
			}
			loop3:
				;

			} finally { DebugExitSubRule(3); }


			}

		}
		finally
		{
			TraceOut("DecimalDigits", 39);
			LeaveRule("DecimalDigits", 39);
			LeaveRule_DecimalDigits();
		}
	}
	// $ANTLR end "DecimalDigits"

	partial void EnterRule_DecimalDigit();
	partial void LeaveRule_DecimalDigit();

	// $ANTLR start "DecimalDigit"
	[GrammarRule("DecimalDigit")]
	private void mDecimalDigit()
	{
		EnterRule_DecimalDigit();
		EnterRule("DecimalDigit", 40);
		TraceIn("DecimalDigit", 40);
		try
		{
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:119:2: ( '0' .. '9' )
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:
			{
			DebugLocation(119, 2);
			if ((input.LA(1)>='0' && input.LA(1)<='9'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("DecimalDigit", 40);
			LeaveRule("DecimalDigit", 40);
			LeaveRule_DecimalDigit();
		}
	}
	// $ANTLR end "DecimalDigit"

	public override void mTokens()
	{
		// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:8: ( T__14 | T__15 | T__16 | T__17 | T__18 | T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 )
		int alt4=30;
		try { DebugEnterDecision(4, false);
		switch (input.LA(1))
		{
		case '$':
			{
			alt4 = 1;
			}
			break;
		case '(':
			{
			switch (input.LA(2))
			{
			case ':':
				{
				alt4 = 3;
				}
				break;
			case '?':
				{
				int LA4_26 = input.LA(3);

				if ((LA4_26=='!'))
				{
					alt4 = 4;
				}
				else if ((LA4_26=='='))
				{
					alt4 = 5;
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 4, 26, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				alt4=2;
				break;

			}

			}
			break;
		case ')':
			{
			alt4 = 6;
			}
			break;
		case '*':
			{
			alt4 = 7;
			}
			break;
		case '+':
			{
			alt4 = 8;
			}
			break;
		case ',':
			{
			alt4 = 9;
			}
			break;
		case '-':
			{
			alt4 = 10;
			}
			break;
		case '.':
			{
			alt4 = 11;
			}
			break;
		case '?':
			{
			alt4 = 12;
			}
			break;
		case 'D':
			{
			alt4 = 13;
			}
			break;
		case 'S':
			{
			alt4 = 14;
			}
			break;
		case 'W':
			{
			alt4 = 15;
			}
			break;
		case '[':
			{
			int LA4_13 = input.LA(2);

			if ((LA4_13=='^'))
			{
				alt4 = 17;
			}
			else
			{
				alt4 = 16;
			}
			}
			break;
		case '\\':
			{
			switch (input.LA(2))
			{
			case 'B':
				{
				alt4 = 19;
				}
				break;
			case 'b':
				{
				alt4 = 20;
				}
				break;
			default:
				alt4=18;
				break;

			}

			}
			break;
		case ']':
			{
			alt4 = 21;
			}
			break;
		case '^':
			{
			alt4 = 22;
			}
			break;
		case 'b':
			{
			alt4 = 23;
			}
			break;
		case 'c':
			{
			alt4 = 24;
			}
			break;
		case 'd':
			{
			alt4 = 25;
			}
			break;
		case 's':
			{
			alt4 = 26;
			}
			break;
		case 'w':
			{
			alt4 = 27;
			}
			break;
		case '{':
			{
			alt4 = 28;
			}
			break;
		case '|':
			{
			alt4 = 29;
			}
			break;
		case '}':
			{
			alt4 = 30;
			}
			break;
		default:
			{
				NoViableAltException nvae = new NoViableAltException("", 4, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
		}

		} finally { DebugExitDecision(4); }
		switch (alt4)
		{
		case 1:
			DebugEnterAlt(1);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:10: T__14
			{
			DebugLocation(1, 10);
			mT__14(); 

			}
			break;
		case 2:
			DebugEnterAlt(2);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:16: T__15
			{
			DebugLocation(1, 16);
			mT__15(); 

			}
			break;
		case 3:
			DebugEnterAlt(3);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:22: T__16
			{
			DebugLocation(1, 22);
			mT__16(); 

			}
			break;
		case 4:
			DebugEnterAlt(4);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:28: T__17
			{
			DebugLocation(1, 28);
			mT__17(); 

			}
			break;
		case 5:
			DebugEnterAlt(5);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:34: T__18
			{
			DebugLocation(1, 34);
			mT__18(); 

			}
			break;
		case 6:
			DebugEnterAlt(6);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:40: T__19
			{
			DebugLocation(1, 40);
			mT__19(); 

			}
			break;
		case 7:
			DebugEnterAlt(7);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:46: T__20
			{
			DebugLocation(1, 46);
			mT__20(); 

			}
			break;
		case 8:
			DebugEnterAlt(8);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:52: T__21
			{
			DebugLocation(1, 52);
			mT__21(); 

			}
			break;
		case 9:
			DebugEnterAlt(9);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:58: T__22
			{
			DebugLocation(1, 58);
			mT__22(); 

			}
			break;
		case 10:
			DebugEnterAlt(10);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:64: T__23
			{
			DebugLocation(1, 64);
			mT__23(); 

			}
			break;
		case 11:
			DebugEnterAlt(11);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:70: T__24
			{
			DebugLocation(1, 70);
			mT__24(); 

			}
			break;
		case 12:
			DebugEnterAlt(12);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:76: T__25
			{
			DebugLocation(1, 76);
			mT__25(); 

			}
			break;
		case 13:
			DebugEnterAlt(13);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:82: T__26
			{
			DebugLocation(1, 82);
			mT__26(); 

			}
			break;
		case 14:
			DebugEnterAlt(14);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:88: T__27
			{
			DebugLocation(1, 88);
			mT__27(); 

			}
			break;
		case 15:
			DebugEnterAlt(15);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:94: T__28
			{
			DebugLocation(1, 94);
			mT__28(); 

			}
			break;
		case 16:
			DebugEnterAlt(16);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:100: T__29
			{
			DebugLocation(1, 100);
			mT__29(); 

			}
			break;
		case 17:
			DebugEnterAlt(17);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:106: T__30
			{
			DebugLocation(1, 106);
			mT__30(); 

			}
			break;
		case 18:
			DebugEnterAlt(18);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:112: T__31
			{
			DebugLocation(1, 112);
			mT__31(); 

			}
			break;
		case 19:
			DebugEnterAlt(19);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:118: T__32
			{
			DebugLocation(1, 118);
			mT__32(); 

			}
			break;
		case 20:
			DebugEnterAlt(20);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:124: T__33
			{
			DebugLocation(1, 124);
			mT__33(); 

			}
			break;
		case 21:
			DebugEnterAlt(21);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:130: T__34
			{
			DebugLocation(1, 130);
			mT__34(); 

			}
			break;
		case 22:
			DebugEnterAlt(22);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:136: T__35
			{
			DebugLocation(1, 136);
			mT__35(); 

			}
			break;
		case 23:
			DebugEnterAlt(23);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:142: T__36
			{
			DebugLocation(1, 142);
			mT__36(); 

			}
			break;
		case 24:
			DebugEnterAlt(24);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:148: T__37
			{
			DebugLocation(1, 148);
			mT__37(); 

			}
			break;
		case 25:
			DebugEnterAlt(25);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:154: T__38
			{
			DebugLocation(1, 154);
			mT__38(); 

			}
			break;
		case 26:
			DebugEnterAlt(26);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:160: T__39
			{
			DebugLocation(1, 160);
			mT__39(); 

			}
			break;
		case 27:
			DebugEnterAlt(27);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:166: T__40
			{
			DebugLocation(1, 166);
			mT__40(); 

			}
			break;
		case 28:
			DebugEnterAlt(28);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:172: T__41
			{
			DebugLocation(1, 172);
			mT__41(); 

			}
			break;
		case 29:
			DebugEnterAlt(29);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:178: T__42
			{
			DebugLocation(1, 178);
			mT__42(); 

			}
			break;
		case 30:
			DebugEnterAlt(30);
			// C:\\Users\\otac0n\\Projects\\RegexLib\\RegexLib\\Parsers\\JavaScript\\JavaScriptRegExp.g:1:184: T__43
			{
			DebugLocation(1, 184);
			mT__43(); 

			}
			break;

		}

	}


	#region DFA

	protected override void InitDFAs()
	{
		base.InitDFAs();
	}

 
	#endregion

}
